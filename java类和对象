类和对象
oop：面向对象程序设计语言
oop三大特征：继承、封装、多态
final 修饰之后，放在哪个内存区域不一定
被static修饰的 静态成员变量   方法区
静态成员变量的访问通过  类名.属性 进行访问
可以通过对象的引用去访问，但不建议
静态方法的调用要通过  类名.方法 进行调用
所有被static 所修饰的不管是方法 ，成员  他的调用或访问都只需要通过 类名. 就可以做到（不依赖对象）

public class Person {
    public static int count;
public static void main(String[] args) {
    Person person1=new Person();
    Person.count++;
    System.out.println(Person.count);//1
    Person person2=new Person();
        Person.count++;
    System.out.println(Person.count);//2
  }
}
static修饰的count在方法区，不属于对象，属于类，只有一个count

为什么main函数是static？？
如果不是静态的，main函数的调用需要对象

成员变量如果没赋值，那他的默认值就是自己所对应的0值
引用类型-》null   数组  类  String
简单类型-》0    char   '\u0000'   boolean=false

类的成员：字段、方法、代码块、 内部类和接口
字段：在类中，但在方法外部定义的变量
在静态方法内部 不能访问非静态的数据成员，原因：
静态的方法   不依赖于对象，对象是否产生，并不影响调用静态方法。
非静态数据成员依赖对象

初始化方式
1、提供一系列 get  set方法
2、构造方法   实例化一个对象-》调用构造方法
实现类的时候，如果没有写构造方法，那编译器会自动生成一个不带参数的构造方法
3、一个对象的产生分为几步？ 两步
    ①为对象分配内存
    ②调用合适的构造方法
构造完成后，对象产生
this代表什么？  当前对象的引用
静态方法内不能用 this

this.成员变量
this.成员方法
this();  调构造方法  只能放在第一行
构造方法设置为私有的，就无法生产对象（构造方法设私有-》设计模式：单例模式-》只产生一个实例）
Object 是任何类的父类

代码块
本地代码块
实例代码块-》初始化类的实例数据成员  实例代码块优先构造方法执行
静态代码块-》初始化静态数据成员   静态代码块优先实例代码块执行
静态的只初始化一次
同级的和顺序有关

时间复杂度
二分查找：O(log2n)
斐波那契数：O(2^n)
空间复杂度